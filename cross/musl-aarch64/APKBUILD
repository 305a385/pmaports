# Automatically generated aport, do not edit!
# Generator: pmbootstrap aportgen musl-aarch64

pkgname="musl-aarch64"
pkgver="1.1.21"
pkgrel=2
arch="armhf armv7 x86_64 x86"
subpackages="musl-dev-aarch64:package_dev"

_arch="aarch64"
_mirror="http://dl-cdn.alpinelinux.org/alpine/"

url="https://musl-libc.org"
license="MIT"
options="!check !strip"
pkgdesc="the musl library (lib c) implementation for $_arch"

_target="$(arch_to_hostspec $_arch)"

source="
    musl-$pkgver-r$pkgrel-$_arch.apk::$_mirror/edge/main/$_arch/musl-$pkgver-r$pkgrel.apk
    musl-dev-$pkgver-r$pkgrel-$_arch.apk::$_mirror/edge/main/$_arch/musl-dev-$pkgver-r$pkgrel.apk
"

package() {
    mkdir -p "$pkgdir/usr/$_target"
    cd "$pkgdir/usr/$_target"
    # Use 'busybox tar' to avoid 'tar: Child returned status 141'
    # on some machines (builds.sr.ht, gitlab-ci). See pmaports#26.
    busybox tar -xf $srcdir/musl-$pkgver-r$pkgrel-$_arch.apk
    rm .PKGINFO .SIGN.*
}
package_dev() {
    mkdir -p "$subpkgdir/usr/$_target"
    cd "$subpkgdir/usr/$_target"
    # Use 'busybox tar' to avoid 'tar: Child returned status 141'
    # on some machines (builds.sr.ht, gitlab-ci). See pmaports#26.
    busybox tar -xf $srcdir/musl-dev-$pkgver-r$pkgrel-$_arch.apk
    rm .PKGINFO .SIGN.*

    # symlink everything from /usr/$_target/usr/* to /usr/$_target/*
    # so the cross-compiler gcc does not fail to build.
    for _dir in include lib; do
        mkdir -p "$subpkgdir/usr/$_target/$_dir"
        cd "$subpkgdir/usr/$_target/usr/$_dir"
        for i in *; do
            cd "$subpkgdir/usr/$_target/$_dir"
            ln -s /usr/$_target/usr/$_dir/$i $i
        done
    done
}

sha512sums="bbee62bd320646dccb1f980808fd8f8291620bf7d249e5b2addc8fb7f547b732eabde67eb26a6d93d8b8c786bc7c31f0b4c75ef04d1c16ea1fd59d2c594756f5  musl-1.1.21-r2-aarch64.apk
d5165a0e9cb771eacbe02a433c5d19f2a5e27d09dc58986756942f5a5fef3c81050f97f01fc374d4ae1eff002db1a6c0acb4ce028854a141a2d233be06a4981a  musl-dev-1.1.21-r2-aarch64.apk"
